#!/usr/bin/env node

const http = require('http')
const debug = require('debug')
const app = require('../app.js')

const port = normalizePort(process.env.PORT || 3000)
app.set('port', port)

const server = http.createServer(app)
server.listen(port)

server.on('error', (error) => {
  if (error.syscall !== 'listen') throw error

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
})

server.on('listening', () => {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
})


function normalizePort(val) {
  // Normalize a port into a number, string, or false.
  const port = parseInt(val, 10)

  // parseInt() returns:
    // An integer Number parsed from the given string 
    // Or NaN when: 
      // the radix modulo 2**32 is smaller than 2 or bigger than 36, or
      // the first non-whitespace character cannot be converted to a number.
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt

  if (isNaN(port)) return val
  if (port >= 0) return port
  return false
}
